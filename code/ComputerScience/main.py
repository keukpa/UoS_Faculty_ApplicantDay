from machine import Pin, I2C
from ssd1306 import SSD1306_I2C
from sprites import *
import framebuf, time

UoS_full = bytearray(b"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00@\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00!\x82\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 \x82\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00!\x86\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x001\xc4\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x041\x86\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x04\x11\xcc\x10\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x029\xcc \x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x19\xdc`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\x1d\xdc\xc0\x00\x00\x00\x10\x00\x00\x00@\x00\x00\x07\x81\x9d\xdd\xc0\x80a\x80\x18\x00\x00\x00`\x00\x00\x0fA\xdf\xf9\x83\x00a\x80\x18\x00\x00\x00f\x00\x00\x0c0\xff\xff\x84\x00q\x80\x00\x00\x00\x00\x06\x00\x00\x0c\x1c\xfbo\x98\x00a\xbb\x1b\x19\xe2\xcfoc\x07\x9f\x06\xef\xffp\x00a\x9f\xbb\x9bw\xdcoc\x0f\xdb\x03\xff\xfd\xe0\x00q\xb9\x99\xbb3\x1afw\x1c\xec\x01\xffw\xc0\x00a\x99\xb9\xf7\xf7\x0ff>\x18l\x00\xdb\xff\x80\x00{\xb9\x98\xe3\x06\x03f\x1c\x0c\xec\x00\x7f\xdf\x00\x00?\x19\xb8\xe3\xf3\x1fn\x1c\x0f\xce\x00?|\x00\x00\x0c\x11\x90\x01e\x1cd\x18\x07\x08\x00\x1d\xf8\x00\x00\x00\x00\x00\x00\x00\x00\x008\x00\x00\x00\x0f\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x000\x00\x00\x00\x03\xe0\x00\x00\x00\x00\x00\x02\x00\x01\x00p\x00\x80\x00\x03\xc0\x00\x00\x1c\x00\x00\x03\x00\x01\x80\x00\x00\xc0\x00\x00\x80\x00\x00~\x00\x00\x03\x00\x03\x80\x00\x00\xc0\x00\x00\x00\x00\x00r\x00\x00\x03\x00\x01\x80\x00\x01\xc0\x01\x00\x00@\x00`DH\x1b\x14%\x89\x12\x04\xc0\x02\x00\x00 \x00|g~\x7f>}\x9f\xbf\x9f\xc0\x04\x80\x01\x10\x00>\xe6gwcs\xbb\x99\xb9\xc0\x0c\x80\x00\x98\x00\x07ff\xe3\x7fa\xb1\xb9\xb8\xc0\x1b\x90\x04\xcc\x00Fgfc`c\xb1\x99\x99\xc032$\xee\x00~~g\x7f7a\xbf\xb9\xdf\xc0\xf72fw\x00|<f?>s\x9f\x99\x8e\xc0ob'{\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00>vg~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1e\xe7w\xbc\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\r\xe6s\xb8\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xefs\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03\xee{\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xef{\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xdf{\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00}o\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00?~\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x1f|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\rx\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x03`\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xc0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00") # 120 x 55
FoT = bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\x80\x00\x00\x00\x0f\x04\x00\x00\x00\x01\xe0\x00\x00\x00\x00\xff\xc0\x00\x00\x00\x07\x1c\x00\x00\x00\x03\xe0\x00\x00\x00\x00\xff\x80\x00\x00\x00\x0e\x1e\x00\x00\x00\x07\x80\x00\x00\x00\x00\xf0\x0f\xe0\xf8q\xcf?x\xe0\x0f\x8f\xe0\x00\x00\x00\x00\x7f\x9f\xf1\xfey\xc7?9\xe0\x1f\xc7\xc0\x00\x00\x00\x00\xff\x1cs\xceq\xce\x1c8\xc08\xe7\x80\x00\x00\x00\x00\xff\x81\xf3\x80s\xcf\x1c\x1d\xc08\xe3\x80\x00\x00\x00\x00\xf0\x0f\xf7\x80y\xc7\x1e\x1d\xc0x\xf7\x80\x00\x00\x00\x00\xf0\x1es\x80s\xce\x1c\x1d\x808\xe3\x80\x00\x00\x00\x00p<\xf3\xcf\x7f\xcf\x1c\x0f\x80<\xe3\x80\x00\x00\x00\x00\xf0\x1f\xf3\xfe?\xcf\x1f\x0f\x80\x1f\xc7\x80\x00\x00\x00\x00\xf0\x0fp\xf8=\xc6\x0f\x07\x00\x0f\x83\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00>\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00|\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\xff\xe0\x00\x008\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x00\xff\xe0\x00\x00<\x00\x00\x00\x1e\x00\x00\x00\x00\x00\x00\x01\xff\xc0\x00\x008\x00\x00\x00\x0c\x00\x00\x00\x00\x00\x00\x00\x1e\x03\xe0|;\xc7x>\x1e\x1f\x07\xbb\xc7\x00\x00\x00\x1e\x07\xf8\xff?\xe7\xfc\x7f\x1e?\x8f\xf9\xcf\x00\x00\x00\x1e\x0e9\xe7?\xe7\xfc\xf3\x8cy\xcey\xc6\x00\x00\x00\x0e\x0f\xfd\xc0<\xe7\x9c\xe3\x9eq\xee9\xee\x00\x00\x00\x1e\x1f\xfd\xc08\xe7\x1d\xe3\xde\xf1\xde8\xce\x00\x00\x00\x1e\x0e\x01\xc08\xe7\x1c\xe3\x8cq\xce8\xec\x00\x00\x00\x1e\x0e9\xe7\xb9\xe7<\xf3\x9eq\xcex|\x00\x00\x00\x1c\x07\xf8\xff<\xe7\x9c\x7f\x1e?\x8f\xf8|\x00\x00\x00\x0e\x03\xe0|8\xe7\x1c>\x0c\x1f\x03\xb88\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x008x\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x0f\xf9\xf0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x07\xe1\xe0\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00')

fb = framebuf.FrameBuffer(UoS_full, 120, 55, framebuf.MONO_HLSB)
fb1 = framebuf.FrameBuffer(FoT, 128, 64, framebuf.MONO_HLSB)

WIDTH = 128
HEIGHT = 64

i2c = I2C(0, scl = Pin(17), sda = Pin(16), freq = 200000) # Setup screen
oled = SSD1306_I2C(WIDTH, HEIGHT, i2c) # Create Screen

# Control Buttons
left = Pin(14, Pin.IN, Pin.PULL_UP)
right = Pin(15, Pin.IN, Pin.PULL_UP)

oled.fill(0)
oled.blit(fb, 0, 0)
oled.show()
time.sleep(0.5)
oled.fill(0)
oled.blit(fb1, 0, 0)
oled.show()
time.sleep(0.5)
oled.fill(0)
oled.show()

# Menu
oled.fill(0)
oled.text("Select game:", 0, 16)
oled.text("-> Pong!", 0, 24)
oled.text("-> Invaders", 0, 32)
oled.show()
time.sleep(2)

def game_of_pong():

    # Pong Variables
    ballX = 64 # Ball X Position
    ballY = 10 # Ball Y Position
    ballSizeX = 4
    ballSizeY = 4
    vx = 1.0 # Velocity X of Ball
    vy = 1.0 # Velocity Y of Ball

    # Paddle
    paddleX = 60 # Paddle X Position
    paddleY = 56 # Paddle Y Position
    paddleSizeX = 16
    paddleSizeY = 4

    lives = 3
    score = 0
    scoreText = "Score: "

    # Game Loop
    while True:
        oled.fill(0)
        oled.fill_rect(int(ballX), int(ballY), ballSizeX, ballSizeY, 1) # Ball Shape
        oled.fill_rect(paddleX, paddleY, paddleSizeX, paddleSizeY, 1) # Paddle Shape
        oled.text("Score: " + str(score), WIDTH-int(len("Score: " + str(score))*8), 0)
        
        # Draw Lives in status
        for x in range(lives):
            oled.fill_rect(2+(8*x), 2, 4, 4, 1)
        oled.show()
        
        ballX += vx
        ballY += vy
        
        if left.value() == 0:
            print("LEFT Button Pressed.")
            paddleX = paddleX - 6
            if paddleX < 0:
                paddleX = 0
        elif right.value() == 0:
            print("RIGHT Button Pressed.")
            paddleX = paddleX + 6
            if paddleX + 16 > 128:
                paddleX = 128 - 16
        
        # Collisions With Screen
        if ballX < 0:
            ballX = 0
            vx = -vx
        if ballY < 0:
            ballY = 0
            vy = -vy
        if ballX + 4 > 128:
            ballX = 128 - 4
            vx = -vx
        
        collision = False
        
        # Life collision
        if ballY + ballSizeY > HEIGHT:
            ballX = WIDTH/2
            ballY = 10
            lives -= 1
            if lives == 0:
                print ("GAME OVER!")            
                oled.fill(0)
                oled.text("GAME OVER!", int((WIDTH-int(len("GAME OVER!")*8))/2),30)
                oled.show()
                break
                
        # Paddle Collision    
        if ballY + ballSizeY > paddleY and ballX > paddleX and ballX + ballSizeX < paddleX + paddleSizeX and ballY < paddleY + paddleSizeY:
            # Paddle Collision
            vy = -vy
            vx = vx + 0.5
            vy = vy - 0.5
            collision = True
        
        # Increase Score count
        if collision == True:
            score += 1        
            collision = False



game_of_pong()